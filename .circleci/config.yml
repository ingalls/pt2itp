version: 2

jobs:
    build:
        docker:
            - image: ubuntu:16.04
            - image: mdillon/postgis:9.6
              environment:
                - POSTGRES_USER=postgres
                - POSTGRES_DB=pt_test

        steps:
            - run:
                name: "Install cURL"
                command: "apt-get update -y && apt-get install -y curl"
            - run:
                name: "Install node with nvm"
                command: "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash && export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && nvm install 6.10.3"
            - run:
                name: "Install Yarn & Ubuntu Toolchain PPAs"
                command: "apt-get install -y software-properties-common git && apt-add-repository -y ppa:ubuntu-toolchain-r/test && curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && echo 'deb http://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list"
            - run:
                name: "Update APT Cache & Install latest yarn & libstdc++-5-dev"
                command: "apt-get -y update && apt-get install -y yarn postgresql-client && apt-get -y install libstdc++-5-dev"

            - checkout

            - run:
                name: "yarn install"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn install"
            - run:
                name: "yarn lint"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn run lint"
            - run:
                name: "yarn doc"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn run doc"
            - run:
                name: "yarn pretest"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn run pretest"
            - run:
                name: "yarn run coverage"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn run coverage"
                no_output_timeout: 12000
            - run:
                name: "yarn run coverage-upload"
                command: "export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && yarn run coverage-upload"
